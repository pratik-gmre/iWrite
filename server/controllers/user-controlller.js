const express = require("express");
const userModel = require("../modules/user-module.js");
const jwt = require("jsonwebtoken");
const bcrypt = require('bcryptjs')

const register = async (req, res) => {
  try {
    const { name, email, password } = req.body;

    const userExist = await userModel.findOne({ name });
    if (userExist) {
      return res.status(401).json("Username already exists");
    }

    const emailExist = await userModel.findOne({ email });
    if (emailExist) {
      return res.status(400).json("Email already exists");
    }

    const user = new userModel({ name, email, password });
    await user.save();

    const token = jwt.sign(
      {
        id: user._id, // id is generated by mongoose itself  in user._id when new user is created
        name: user.name,
      },
      process.env.JWT_SECRET,
      { expiresIn: "24h" }
    );
    console.log(user);

    res.status(200).json({
      _id: user._id,
      avatar: user.avatar,
      name: user.name,
      email: user.email,
      verified: user.verified,
      admin: user.admin,
      token: token,
    });
  } catch (error) {
    return res.status(400).json({ msg: "Something went wrong" });
  }
};

const login = async (req, res) => {
  try {
    const { name, email, password } = req.body;

    const user = await userModel.findOne({ email });
    if (!user) {
      return res.status(400).json({ error: "User not found" });
    }

    // Compare the provided password with the stored hashed password
    const passwordMatch = await bcrypt.compare(password, user.password);
    if (!passwordMatch) {
      return res.status(400).json({ error: "Incorrect password" });
    }

    // Send successful login response with token
    res.status(200).json({
      msg: "Login successful",
      name: user.name,
      token: token,
    });
  } catch (error) {
    // Handle any unexpected errors
    console.error("Login error:", error);
    res.status(500).json({ error: "Internal server error" });
  }
};

module.exports = {
  register: register,
  login: login,
};
